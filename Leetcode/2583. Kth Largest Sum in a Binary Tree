/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) {
        queue<TreeNode*> q;
        vector<long long> v;
        if(root==NULL){
            return 0;
        }
        else{
            q.push(root);
        }
        
        while(!q.empty()){
            int len=q.size();
            long long count=0;
            for(int i=0;i<len;i++){
                TreeNode *front = q.front();
                q.pop();
                count+=front->val;
                if(front->left!=NULL){
                    q.push(front->left);
                }
                if(front->right!=NULL){
                    q.push(front->right);
                }
            }
            v.push_back(count);
        }

        sort(v.begin(),v.end(),greater<long long>());
        if(v.size()<k){
            return -1;
        }
        return v[k-1];
    }
};
