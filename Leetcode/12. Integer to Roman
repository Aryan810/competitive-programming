class Solution {
public:
    string intToRoman(int num) {
        unordered_map<int, char> m{{1, 'I'}, {5, 'V'}, {10, 'X'}, {50, 'L'}, {100, 'C'}, {500, 'D'}, {1000, 'M'}};
        
        int n=100, i;
        string ans="";
        
        if(num/1000>0)
        {
            for(i=0; i<num/1000; i++) ans.push_back(m[1000]);
            num=num%1000;
        }
        while(num>0)
        {
            if(num/(9*n)==1){
                ans.push_back(m[n]);
                ans.push_back(m[n*10]);
            }
            else if(num/(5*n)>0){
                ans.push_back(m[5*n]);
                for(i=0; i<(num/n)-5; i++) ans.push_back(m[n]);
            }
            else if(num/(4*n)==1){
                ans.push_back(m[n]);
                ans.push_back(m[5*n]);
            }
            else if(num/n>0){
                for(i=0; i<num/n; i++)
                ans.push_back(m[n]);
            }
            num=num%n;
            n/=10;
        }
        return ans;
    }
};
